#!/bin/sh
# Copyright (C) 2006 OpenWrt.org

. /etc/functions.sh
export PATH=/bin:/sbin:/usr/bin:/usr/sbin

# the shell really doesn't like having stdin/out closed
# that's why we use /dev/pty/m0 and m1 as replacement
# for /dev/console if there's no serial console available
dd if=/dev/console of=/dev/null bs=1 count=0 >/dev/null 2>/dev/null || \
	exec </dev/pty/m0 >/dev/pty/m1 2>&0

failsafe() {
	lock /tmp/.failsafe

	echo "0 1 2 3 4 5u*" > /proc/switch/eth0/vlan/0/ports
	
	set_state failsafe
	[ -x "/usr/sbin/nvram" ] && {
		[ "$(nvram get boot_wait)" != "on" ] && {
			nvram set boot_wait=on
			nvram commit
		}
	}

	netmsg 192.168.1.255 "Entering Failsafe!"
	telnetd -l /bin/login <> /dev/null 2>&1

	ash --login
}

export PATH=/bin:/sbin:/usr/bin:/usr/sbin
mount none /proc -t proc
size=$(awk '/Mem:/ {l=5242880;print((s=$2/2)<l)?$2-l:s}' /proc/meminfo)
mount none /tmp -t tmpfs -o size=$size

insmod diag
set_state preinit
trap 'FAILSAFE=true' USR1
echo '/sbin/hotplug.failsafe' > /proc/sys/kernel/hotplug

ifname=eth0

# hardware specific overrides
case "$(cat /proc/diag/model)" in
	"Linksys WAP54G V1") ifname=eth1;;
	"ASUS WL-HDD") ifname=eth1;;
	"ASUS WL-300g") ifname=eth1;;
	"ASUS (unknown, BCM4702)") ifname=eth1;;
esac

insmod switch-core
insmod switch-robo || insmod switch-adm || rmmod switch-core

ifconfig $ifname 192.168.1.1 netmask 255.255.255.0 broadcast 192.168.1.255 up

# save the boot loader's vlan config
# we need it on some routers that have no vlan*ports set
[ -d /proc/switch/eth0 ] && {
	export v0p="$(cat /proc/switch/eth0/vlan/0/ports)"
	export v1p="$(cat /proc/switch/eth0/vlan/1/ports)"
	export v2p="$(cat /proc/switch/eth0/vlan/2/ports)"
	echo 1 > /proc/switch/eth0/reset

	# this would be easier if we blasted the message across all ports
	# but we don't want packets leaking across interfaces

	for port in $(seq 0 4); do {
		echo "$port 5u*" > /proc/switch/eth0/vlan/0/ports
		netmsg 192.168.1.255 "Press reset now, to enter Failsafe!"
	}; done

} || netmsg 192.168.1.255 "Press reset now, to enter Failsafe!"

sleep 2

eval ${FAILSAFE:+failsafe}

lock -w /tmp/.failsafe
set_state preinit
echo /sbin/hotplug > /proc/sys/kernel/hotplug

ifconfig $ifname 0.0.0.0 down

# revert to the boot loader's vlan config
# required for at least WRT54G v1.1
[ -d /proc/switch/eth0 ] && {
	echo "$v0p" > /proc/switch/eth0/vlan/0/ports
	echo "$v1p" > /proc/switch/eth0/vlan/1/ports
	echo "$v2p" > /proc/switch/eth0/vlan/2/ports
	unset v0p v1p v2p
}

mount_root
exec /sbin/init
