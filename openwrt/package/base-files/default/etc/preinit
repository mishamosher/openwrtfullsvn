#!/bin/sh
. /etc/functions.sh
export PATH=/bin:/sbin:/usr/bin:/usr/sbin

mount none /proc -t proc
size=$(awk '/Mem:/ {l=5242880;print((s=$2/2)<l)?$2-l:s}' /proc/meminfo)
mount none /tmp -t tmpfs -o size=$size

insmod diag
echo /sbin/hotplug.failsafe > /proc/sys/kernel/hotplug
set_state preinit

ifname=eth0
# WAP54G, WL-HDD
[  "$(nvram get boardnum)" = "2" \
-o \( "$(nvram get boardnum)" = "asusX" \
   -a "$(($(nvram get et1phyaddr)))" -eq 1 \) ] && ifname="eth1"

insmod switch-core
insmod switch-robo || insmod switch-adm || rmmod switch-core

ifconfig $ifname 192.168.1.1 netmask 255.255.255.0 broadcast 192.168.1.255 up

# save the boot loader's vlan config
# we need it on some routers that have no vlan*ports set
[ -d /proc/switch/eth0 ] && {
	export v0p="$(cat /proc/switch/eth0/vlan/0/ports)"
	export v1p="$(cat /proc/switch/eth0/vlan/1/ports)"
	export v2p="$(cat /proc/switch/eth0/vlan/2/ports)"
	echo 1 > /proc/switch/eth0/reset

	# this would be easier if we blasted the message across all ports
	# but we don't want packets leaking across interfaces

	for port in $(seq 0 4); do {
		echo "$port 5u*" > /proc/switch/eth0/vlan/0/ports
		netmsg 192.168.1.255 "Press reset now, to enter Failsafe!"
	}; done

} || netmsg 192.168.1.255 "Press reset now, to enter Failsafe!"

sleep 2

lock -w /tmp/.failsafe
echo /sbin/hotplug > /proc/sys/kernel/hotplug

ifconfig $ifname 0.0.0.0 down

# revert to the boot loader's vlan config
# required for at least WRT54G v1.1
[ -d /proc/switch/eth0 ] && {
	echo "$v0p" > /proc/switch/eth0/vlan/0/ports
	echo "$v1p" > /proc/switch/eth0/vlan/1/ports
	echo "$v2p" > /proc/switch/eth0/vlan/2/ports
	unset v0p v1p v2p
}

mount_root

exec /sbin/init
