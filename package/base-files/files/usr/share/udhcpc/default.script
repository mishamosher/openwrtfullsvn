#!/bin/sh
[ -z "$1" ] && echo "Error: should be run by udhcpc" && exit 1
. /etc/functions.sh
include /lib/network

RESOLV_CONF="/tmp/resolv.conf.auto"

hotplug_event() {
	scan_interfaces
	for ifc in $interfaces; do
		config_get ifname $ifc ifname
		[ "$ifname" = "$interface" ] || continue

		config_get proto $ifc proto
		[ "$proto" = "dhcp" ] || continue
		[ ifup = "$1" ] && {
			config_get userdns "$ifc" dns
			[ -n "$userdns" ] && {
				for i in $userdns; do
					echo "custom dns $i"
					echo "nameserver $i" >> "${RESOLV_CONF}.tmp"
				done
				dns="$userdns"
			}
			uci_set_state network "$ifc" ipaddr "$ip"
			uci_set_state network "$ifc" netmask "${subnet:-255.255.255.0}"
			uci_set_state network "$ifc" dnsdomain "$domain"
			uci_set_state network "$ifc" dns "$dns"
			uci_set_state network "$ifc" gateway "$router"
		}
		
		env -i ACTION="$1" INTERFACE="$ifc" DEVICE="$ifname" PROTO=dhcp /sbin/hotplug-call iface
	done
}

case "$1" in
	deconfig)
		ifconfig $interface 0.0.0.0
		hotplug_event ifdown
	;;
	renew|bound)
		ifconfig $interface $ip \
		netmask ${subnet:-255.255.255.0} \
		broadcast ${broadcast:-+}

		[ -n "$router" ] && {
			for i in $router ; do
				echo "adding router $i"
				route add default gw $i dev $interface
				valid="$valid|$i"

			done

			echo "deleting old routes"
			$(route -n | awk '/^0.0.0.0\W{9}('$valid')\W/ {next} /^0.0.0.0/ {print "route del -net "$1" gw "$2";"}')
		}

		[ -n "$dns" ] && \
			echo -n > "${RESOLV_CONF}.tmp"
		
		if [ "$1" = "renew" ]; then
			hotplug_event update
		else
			hotplug_event ifup
		fi
		
		[ -n "$dns" ] && {
			[ -s "${RESOLV_CONF}.tmp" ] || {
				for i in $dns ; do
					echo "adding dns $i"
					echo "nameserver $i" >> "${RESOLV_CONF}.tmp"
				done
			}

			${domain:+echo search $domain} >> "${RESOLV_CONF}.tmp"

			mv "${RESOLV_CONF}.tmp" "$RESOLV_CONF"
		}
		
		# user rules
		[ -f /etc/udhcpc.user ] && . /etc/udhcpc.user
	;;
esac

exit 0
